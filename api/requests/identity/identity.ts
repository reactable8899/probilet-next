/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * Probilet API
 * A simple instruction manual for those who need the probilet api.
 * OpenAPI spec version: 1.0
 */
import {
  useMutation
} from '@tanstack/react-query'
import type {
  MutationFunction,
  UseMutationOptions,
  UseMutationResult
} from '@tanstack/react-query'
import type {
  TokenRefreshInputSchema,
  TokenRefreshOutputSchema
} from '../../schemas'
import { customInstance } from '../../customInstance';
import type { ErrorType, BodyType } from '../../customInstance';


type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];


/**
 * @summary Refresh Token
 */
export const PostApiV1IdentityTokenRefresh = (
    tokenRefreshInputSchema: BodyType<TokenRefreshInputSchema>,
 options?: SecondParameter<typeof customInstance>,) => {
      
      
      return customInstance<TokenRefreshOutputSchema>(
      {url: `/api/v1/identity/token/refresh`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: tokenRefreshInputSchema
    },
      options);
    }
  


export const getPostApiV1IdentityTokenRefreshMutationOptions = <TError = ErrorType<unknown>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof PostApiV1IdentityTokenRefresh>>, TError,{data: BodyType<TokenRefreshInputSchema>}, TContext>, request?: SecondParameter<typeof customInstance>}
): UseMutationOptions<Awaited<ReturnType<typeof PostApiV1IdentityTokenRefresh>>, TError,{data: BodyType<TokenRefreshInputSchema>}, TContext> => {
const {mutation: mutationOptions, request: requestOptions} = options ?? {};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof PostApiV1IdentityTokenRefresh>>, {data: BodyType<TokenRefreshInputSchema>}> = (props) => {
          const {data} = props ?? {};

          return  PostApiV1IdentityTokenRefresh(data,requestOptions)
        }

        


  return  { mutationFn, ...mutationOptions }}

    export type PostApiV1IdentityTokenRefreshMutationResult = NonNullable<Awaited<ReturnType<typeof PostApiV1IdentityTokenRefresh>>>
    export type PostApiV1IdentityTokenRefreshMutationBody = BodyType<TokenRefreshInputSchema>
    export type PostApiV1IdentityTokenRefreshMutationError = ErrorType<unknown>

    /**
 * @summary Refresh Token
 */
export const usePostApiV1IdentityTokenRefresh = <TError = ErrorType<unknown>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof PostApiV1IdentityTokenRefresh>>, TError,{data: BodyType<TokenRefreshInputSchema>}, TContext>, request?: SecondParameter<typeof customInstance>}
): UseMutationResult<
        Awaited<ReturnType<typeof PostApiV1IdentityTokenRefresh>>,
        TError,
        {data: BodyType<TokenRefreshInputSchema>},
        TContext
      > => {

      const mutationOptions = getPostApiV1IdentityTokenRefreshMutationOptions(options);

      return useMutation(mutationOptions);
    }
    